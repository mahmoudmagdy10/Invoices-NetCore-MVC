<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddAttachments" xml:space="preserve">
    <value>Add Attachments</value>
  </data>
  <data name="AddInvoice" xml:space="preserve">
    <value>Add Invoice</value>
  </data>
  <data name="AddOrRemoveUsers" xml:space="preserve">
    <value>Add Or Remove Users</value>
  </data>
  <data name="AddOrRemoveUsersInRole" xml:space="preserve">
    <value>Add Or Remove Users In Role</value>
  </data>
  <data name="AddProduct" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="AddSection" xml:space="preserve">
    <value>Add Section</value>
  </data>
  <data name="AllowedAttachmentTypesAre" xml:space="preserve">
    <value>Allowed Attachment Types Are : </value>
  </data>
  <data name="AmountCollection" xml:space="preserve">
    <value>Amount Collection</value>
  </data>
  <data name="AmountCommission" xml:space="preserve">
    <value>Amount Commission</value>
  </data>
  <data name="AmountPaied" xml:space="preserve">
    <value>The Amount Paied</value>
  </data>
  <data name="AreYouSureToDeleteTheAttachment" xml:space="preserve">
    <value>Are You Sure To Delete The Attachment ?</value>
  </data>
  <data name="AreYouSureToDeleteTheInvoice" xml:space="preserve">
    <value>Are You Sure To Delete The Invoice ?</value>
  </data>
  <data name="AreYouSureToDeleteTheRole" xml:space="preserve">
    <value>Are You Sure To Delete The Role ?</value>
  </data>
  <data name="Attachment" xml:space="preserve">
    <value>Attachment</value>
  </data>
  <data name="AttachmentName" xml:space="preserve">
    <value>Attachment Name</value>
  </data>
  <data name="BackToData" xml:space="preserve">
    <value>Back To Data</value>
  </data>
  <data name="BilledTo" xml:space="preserve">
    <value>Billed To</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePaymentStatus" xml:space="preserve">
    <value>Change Payment Status</value>
  </data>
  <data name="ChangePayStatus" xml:space="preserve">
    <value>Change Payment Status</value>
  </data>
  <data name="Choose Product" xml:space="preserve">
    <value>Choose Product</value>
  </data>
  <data name="Choose Section" xml:space="preserve">
    <value>Choose Section</value>
  </data>
  <data name="CNR" xml:space="preserve">
    <value>Create New Role</value>
  </data>
  <data name="CNU" xml:space="preserve">
    <value>Create New User</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteInvoice" xml:space="preserve">
    <value>Delete Invoice</value>
  </data>
  <data name="DeleteSection" xml:space="preserve">
    <value>Delete Section</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditRole" xml:space="preserve">
    <value>Edit The Role</value>
  </data>
  <data name="EditSection" xml:space="preserve">
    <value>Edit Section</value>
  </data>
  <data name="EnterAmountCollection" xml:space="preserve">
    <value>Enter Amount Collection</value>
  </data>
  <data name="EnterAmountCommission" xml:space="preserve">
    <value>Enter Amount Commission</value>
  </data>
  <data name="EnterDiscount" xml:space="preserve">
    <value>Enter Discount</value>
  </data>
  <data name="EnterInvoiceNumber" xml:space="preserve">
    <value>Enter Invoice Number</value>
  </data>
  <data name="EnterProductDescription" xml:space="preserve">
    <value>Enter Product Description</value>
  </data>
  <data name="EnterProductName" xml:space="preserve">
    <value>Enter Product Name</value>
  </data>
  <data name="EnterSectionDescription" xml:space="preserve">
    <value>Enter Section Description</value>
  </data>
  <data name="EnterSectionName" xml:space="preserve">
    <value>Enter Section Name</value>
  </data>
  <data name="ExportInvoices" xml:space="preserve">
    <value>Export Invoices</value>
  </data>
  <data name="FromDate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="Hi welcome back" xml:space="preserve">
    <value>Hi, Welcome Back</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="InvoiceAttachment" xml:space="preserve">
    <value>Invoice Attachment</value>
  </data>
  <data name="InvoiceAttachments" xml:space="preserve">
    <value>Invoice's Attachments</value>
  </data>
  <data name="InvoiceDate" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="InvoiceInfo" xml:space="preserve">
    <value>Invoice's Information</value>
  </data>
  <data name="InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="InvoicesList" xml:space="preserve">
    <value>Invoices List</value>
  </data>
  <data name="InvoicesReports" xml:space="preserve">
    <value>Invoices Reports</value>
  </data>
  <data name="InvoicesStatus" xml:space="preserve">
    <value>Invoices Status</value>
  </data>
  <data name="InvoiceStatus" xml:space="preserve">
    <value>Invoice's Status</value>
  </data>
  <data name="ltr" xml:space="preserve">
    <value>ltr</value>
  </data>
  <data name="Main" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="MarkAllRead" xml:space="preserve">
    <value>Mark All Read</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="NumOfInvoices" xml:space="preserve">
    <value>Number Of Invoices</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="Paied" xml:space="preserve">
    <value>Paied</value>
  </data>
  <data name="PaiedInvoices" xml:space="preserve">
    <value>Paied Invoices</value>
  </data>
  <data name="PaiedInvoicesList" xml:space="preserve">
    <value>Paied Invoices List</value>
  </data>
  <data name="PartialAmountPaied" xml:space="preserve">
    <value>Partial Amount Paied</value>
  </data>
  <data name="PartialPaied" xml:space="preserve">
    <value>Partial Paied</value>
  </data>
  <data name="PartialPaiedInvoiceList" xml:space="preserve">
    <value>Partial Paied Invoice List</value>
  </data>
  <data name="PartialPaiedInvoices" xml:space="preserve">
    <value>Partial Paied Invoices</value>
  </data>
  <data name="PayDate" xml:space="preserve">
    <value>Payment Date</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintInvoice" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Privileges" xml:space="preserve">
    <value>Privileges</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductsList" xml:space="preserve">
    <value>Products List</value>
  </data>
  <data name="RateVat" xml:space="preserve">
    <value>Rate Vat</value>
  </data>
  <data name="RemainingAmount" xml:space="preserve">
    <value>Remaining Amount</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="RestAmount" xml:space="preserve">
    <value>Rest Amount</value>
  </data>
  <data name="RoleCard" xml:space="preserve">
    <value>Role Card</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchByInvoiceNum" xml:space="preserve">
    <value>Search By Invoice Number</value>
  </data>
  <data name="SearchByInvoiceType" xml:space="preserve">
    <value>Search By Invoice Type</value>
  </data>
  <data name="Section" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="SectionName" xml:space="preserve">
    <value>Section Name</value>
  </data>
  <data name="Sections" xml:space="preserve">
    <value>Sections</value>
  </data>
  <data name="SectionsList" xml:space="preserve">
    <value>Sections List</value>
  </data>
  <data name="SelectInvoicesType" xml:space="preserve">
    <value>Select Invoices Type</value>
  </data>
  <data name="SelectRateVat" xml:space="preserve">
    <value>Select Rate Vat</value>
  </data>
  <data name="SelectValueStatus" xml:space="preserve">
    <value>Select Value Status</value>
  </data>
  <data name="Services" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TheTotalIncludesVat" xml:space="preserve">
    <value>The Total Includes Vat</value>
  </data>
  <data name="ToDate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="ToltalInvoices" xml:space="preserve">
    <value>Toltal Invoices</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalCollectionAndCommissionAmount" xml:space="preserve">
    <value>Total Collection And Commission Amount</value>
  </data>
  <data name="TotalIncludesVat" xml:space="preserve">
    <value>Total Includes Vat</value>
  </data>
  <data name="UnPaiedInvoices" xml:space="preserve">
    <value>UnPaied Invoices</value>
  </data>
  <data name="UnPaiedInvoicesList" xml:space="preserve">
    <value>UnPaied Invoices List</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UserCard" xml:space="preserve">
    <value>User Card</value>
  </data>
  <data name="UserDetails" xml:space="preserve">
    <value>User Details</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>UserName</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="UsersReports" xml:space="preserve">
    <value>Users Reports</value>
  </data>
  <data name="ValueStatus" xml:space="preserve">
    <value>Value Status</value>
  </data>
  <data name="ValueVat" xml:space="preserve">
    <value>Value Vat</value>
  </data>
  <data name="WTR" xml:space="preserve">
    <value>Welcome To Roles Page </value>
  </data>
  <data name="WTU" xml:space="preserve">
    <value>Welcome To User Page</value>
  </data>
</root>